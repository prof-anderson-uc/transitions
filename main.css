/* GRADIENTS
------------------------------
CSS gradients allow you to create smooth transitions between colors.
 - Linear gradients: transition along a straight line.
 - Radial gradients: colors radiate outward from a center point.

Example: 
  background: linear-gradient(to right, red, blue);
  background: radial-gradient(circle, yellow, green);
------------------------------*/

section.linear1 {

}


section.linear2 {

}


section.linear3 {

}


section.radial1 {

}


section.radial2 {

}


section.repeating {
   
}




/* TRANSITIONS
------------------------------
CSS transitions allow you to create smooth changes to properties over a set duration. Use with pseudo-classes (e.g., :hover) to trigger effects.

Example:
  transition: all 0.5s ease;

This example changes any property over 0.5 seconds using an "ease" timing function.
------------------------------*/

section.color {
   background: #a8dadc;
}


section.color:hover {
   background: #375383;
}


section.multiple {
   background: #a8dadc;
}


section.multiple:hover {
   background: #375383;
}




/* TRANSFORMS
------------------------------
CSS transforms allow you to visually manipulate elements in 2D or 3D space. 
- 2D transforms include scaling, rotating, and translating elements.
- 3D transforms add depth and can rotate elements along the X, Y, or Z axes.

Example:
  transform: scale(1.2) rotateX(45deg);

These effects are often combined with transitions for smooth animations.
------------------------------ */

section.rotate {
   background: #6c8fa6;
}


section.rotatex {
   background: #6c8fa6;
}


section.rotatex:hover {

}


section.rotatey {
   background: #6c8fa6;
}


section.rotatey:hover {

}


section.scale {
   background: #6c8fa6;
}


section.scale:hover {

}


section.translatex {
   background: #6c8fa6;
}


section.translatex:hover {

}


section.translatey {
   background: #6c8fa6;
}


section.translatey:hover {

}

section.skew {
   background: #6c8fa6;
}

section.skew:hover {

}

section.experiment {
   background: #6c8fa6;
}


section.experiment:hover {

}




/* HOVER CARD
------------------------------*/
.card {
   max-width: 300px;
   padding: 1.5rem;
   margin: 1rem auto;
   border-radius: 10px;
   background: linear-gradient(to bottom, #f1faee, #a8dadc);
   box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
   text-align: center;
   transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card h3 {
   font-size: 150%;
   border-bottom: 2px solid silver;
   margin-bottom: .5rem;
   padding-bottom: .5rem;
}

.card:hover {

}



/* BUTTON EFFECT
------------------------------
In this exercise, we're using CSS to style an <a> link element to look like a button. This technique is useful for navigation links that take you to other pages or external sites.

Be aware that there is also an HTML element named <button>, which is typically used for actions like submitting forms or triggering JavaScript functionality. We haven't introduced <button> yet since itâ€™s primarily used in the context of forms or interactive features.

Styling <a> elements as buttons is a worthwhile technique because:
 - It ensures semantic HTML when the action is navigation.
 - It provides a consistent and accessible user experience across your site.
 - It's a flexible approach that allows for visual consistency without changing the underlying behavior.
------------------------------*/
a.button {
   border: 2px solid silver;
   padding: .75em 1.5em;
   border-radius: 3em;
   background: linear-gradient(#EA393B, #4D0808);
   color: #e1e1e1;
   font-weight: bold;
   text-decoration: none;
   box-shadow: inset 2px 2px 10px black;
   transition: all .5s ease;
}

a.button:hover {
   transform: scale(1.05);
   box-shadow: none;
   color: white;
}








/* ANIMATED CARD FLIP
------------------------------*/
/* This CSS creates an animated 3D card flip effect.
   The card consists of a "front" and a "back" side, which flip when the user hovers over the card.
   Key concepts demonstrated:
   - 3D transformations using the `transform` property.
   - Smooth animations with `transition`.
   - Visibility control using `backface-visibility`.
   - Layout adjustments for handling more content on each side.
   Follow the comments to understand how each part contributes to the final effect. */



/* Container to center the card and add 3D perspective */
.card-container {
   width: 300px;
   /* Increased width for more content */
   height: 400px;
   /* Increased height for more content */
   perspective: 1000px;
   /* Adds depth to create a 3D effect */
   margin: 50px auto;
   /* Centers the container horizontally */
}

/* Wrapper for the card that will flip */
.flip-card {
   width: 100%;
   /* Make the card fill the container's width */
   height: 100%;
   /* Make the card fill the container's height */
   position: relative;
   /* Needed for absolute positioning of front/back sides */
   transform-style: preserve-3d;
   /* Ensures the front and back exist in 3D space */
   transform: rotateY(0deg);
   /* Start with the front side facing the viewer */
   transition: transform 0.6s ease;
   /* Adds a smooth animation when flipping */
}

/* The headings at the top of the cards */
.flip-card h2 {
   color: white;
   /* Color of the <h2> elements */
}

/* Flip the card on hover */
.card-container:hover .flip-card {
   transform: rotateY(180deg);
   /* Rotates the card 180 degrees on the Y-axis */
}

/* Styles for both sides of the card */
.flip-card div {
   width: 100%;
   /* Make each side fill the card's width */
   height: 100%;
   /* Make each side fill the card's height */
   position: absolute;
   /* Position the front and back sides relative to the card */
   backface-visibility: hidden;
   /* Hides the side that is facing away from the viewer */
   display: flex;
   /* Centers content on each side */
   flex-direction: column;
   /* Stack content vertically */
   justify-content: center;
   /* Center content vertically */
   align-items: center;
   /* Center content horizontally */
   padding: 20px;
   /* Add padding for content spacing */
   font-size: 16px;
   /* Adjust text size */
   border: 1px solid #ddd;
   /* Adds a border to each side */
   border-radius: 10px;
   /* Rounds the corners of the card */
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
   /* Adds a subtle shadow for depth */
   box-sizing: border-box;
   /* Ensures padding doesn't affect size */
   text-align: center;
   /* Center-align text */
}

/* Style for the front side of the card */
.front {
   background: #4caf50;
   /* Green background for the front */
   color: white;
   /* White text color for contrast */
}

/* Style for the back side of the card */
.back {
   background: #f44336;
   /* Red background for the back */
   color: white;
   /* White text color for contrast */
   transform: rotateY(180deg);
   /* Rotate the back side 180 degrees so it's hidden initially */
}







/* SECTION LAYOUTS
------------------------------*/
section.container {
   color: white;
   background-color: #d9d9d9;
   border: 1px solid #ADADAD;
   border-radius: 1rem;
   padding: 1rem;
   text-shadow: 1px 1px 3px black;
   /* display: grid;
   grid-template-columns: 1fr 1fr 1fr;
   gap: 1rem; */
}

section.container {
   margin-bottom: 1.5rem;
}

section.container section.column {
   border: 2px solid silver;
   display: flex;
   align-items: center;
   justify-content: center;
   min-height: 6rem;
   text-transform: uppercase;
   text-align: center;
   line-height: 1.4;
}

section.four-columns {
   display: grid;
   grid-template-columns: 1fr 1fr 1fr 1fr;
   gap: 1rem;
}

section.three-columns {
   display: grid;
   grid-template-columns: 1fr 1fr 1fr;
   gap: 1rem;
}

section.two-columns {
   display: grid;
   grid-template-columns: 1fr 1fr;
   gap: 1rem;
}

section.one-column {
   display: grid;
   grid-template-columns: 1fr;
   gap: 1rem;
}


/* GENERAL PAGE STYLES
------------------------------*/
body {
   font-family: sans-serif;
   /* height: 100%; */
   background: linear-gradient(#acb8c7, #414245);
   padding: 1rem;
}

div.wrapper {
   max-width: 1000px;
   margin: 0 auto;
   padding: 1rem;
   border: 1px solid black;
   background-color: white;
   border-radius: 2rem;
   box-shadow: inset 2px 2px 10px -5px black;
}

h1 {
   text-align: center;
   margin-bottom: 1rem;
   font-size: 150%;
   text-wrap: pretty;
   color: #7989a7;
   border-bottom: 1px solid #7989a7;
   padding: .25rem 0 .75rem 0;
}

h2 {
   font-size: 150%;
   color: #a0b3d4;
   margin: 1.5rem 0 .5rem 0;
}

aside.info {
   border: 2px solid silver;
   font-size: 90%;
   line-height: 125%;
   background-color: #ebebeb;
   margin: 2rem 1rem 1rem;
   padding: 1rem;
   border-radius: 2rem;
   display: grid;
   grid-template-columns: 1fr 2fr;
   grid-gap: 1.5rem;
}

aside.info h2 {
   grid-column: 1/3;
   color: black;
   font-size: 175%;
}

aside.info h3 {
   font-size: 120%;
   border-bottom: 1px solid black;
   margin-bottom: .25rem;
}

aside.info dt {
   font-family: monospace;
   font-weight: bold;
   font-size: 145%;
}

aside.info dd {
   margin-bottom: .75rem;
}

aside.info li {
   margin: 0 0 .5rem 1rem;
}

a {
   text-shadow: none;
}